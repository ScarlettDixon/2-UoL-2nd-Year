OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-02-16T14:15:54.464689+00:00' ],		#prior : OmReference [ 'Pharo.ccld7vcqqkt7vg81gl074l2ek', '13' ],		#self : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #Wk5,		#affectedPackageName : #Wk5	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-02-16T14:15:54.510689+00:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Week5C1\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Wk5\''			},			#name : #Week5C1,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Week5C1 class\r\tinstanceVariableNames: \'\''				},				#name : #'Week5C1 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Week5C1,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Wk5,			#package : #Wk5,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Scar',		#time : DateAndTime [ '2018-02-16T14:16:47.536689+00:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Week5C1,				#isMetaSide : false			},			#name : #Method1,			#protocol : #'as yet unclassified',			#sourceCode : 'Method1\r\rTranscript show: \'Hello World\'',			#stamp : 'Scar 2/16/2018 14:16',			#package : #Wk5		}	}}OmEntry {	#tags : {		#author : 'Scar',		#time : DateAndTime [ '2018-02-16T14:18:42.223689+00:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Week5C1,				#isMetaSide : false			},			#name : #Method1,			#protocol : #'as yet unclassified',			#sourceCode : 'Method1\r\rTranscript show: \'Hello World\'',			#stamp : 'Scar 2/16/2018 14:16',			#package : #Wk5		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Week5C1,				#isMetaSide : false			},			#name : #Method1,			#protocol : #'as yet unclassified',			#sourceCode : 'Method1\r\rTranscript clear \rTranscript show: \'Hello World\'\r',			#stamp : 'Scar 2/16/2018 14:18',			#package : #Wk5		}	}}OmEntry {	#tags : {		#author : 'Scar',		#time : DateAndTime [ '2018-02-16T14:19:17.991689+00:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Week5C1,				#isMetaSide : false			},			#name : #Method1,			#protocol : #'as yet unclassified',			#sourceCode : 'Method1\r\rTranscript clear \rTranscript show: \'Hello World\'\r',			#stamp : 'Scar 2/16/2018 14:18',			#package : #Wk5		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Week5C1,				#isMetaSide : false			},			#name : #Method1,			#protocol : #'as yet unclassified',			#sourceCode : 'Method1\r\rTranscript clear. \rTranscript show: \'Hello World\'.\r',			#stamp : 'Scar 2/16/2018 14:19',			#package : #Wk5		}	}}OmEntry {	#tags : {		#author : 'Scar',		#time : DateAndTime [ '2018-02-16T14:23:52.792689+00:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Week5C1\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Wk5\''			},			#name : #Week5C1,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Week5C1 class\r\tinstanceVariableNames: \'\''				},				#name : #'Week5C1 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Week5C1,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Wk5,			#package : #Wk5,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Scar',		#time : DateAndTime [ '2018-02-16T14:42:22.171689+00:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Week5C1',				#traitCompositionSource : '{}',				#definitionSource : 'Week5C1 subclass: #Week5C2\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Wk5\''			},			#name : #Week5C2,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Week5C2 class\r\tinstanceVariableNames: \'\''				},				#name : #'Week5C2 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Week5C2,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Wk5,			#package : #Wk5,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Scar',		#time : DateAndTime [ '2018-02-16T14:42:25.630689+00:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Week5C1',				#traitCompositionSource : '{}',				#definitionSource : 'Week5C1 subclass: #Week5C2\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Wk5\''			},			#name : #Week5C2,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Week5C2 class\r\tinstanceVariableNames: \'\''				},				#name : #'Week5C2 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Week5C2,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Wk5,			#package : #Wk5,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Scar',		#time : DateAndTime [ '2018-02-16T14:43:25.909689+00:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Week5C2,				#isMetaSide : false			},			#name : #Method2,			#protocol : #'as yet unclassified',			#sourceCode : 'Method2\r\rTranscript show: \'Second Subclass Called\'.\r',			#stamp : 'Scar 2/16/2018 14:43',			#package : #Wk5		}	}}